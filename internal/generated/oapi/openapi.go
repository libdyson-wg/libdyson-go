// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package oapi

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9xZbW/bOBL+KwTvgP1wsp2k2wXOn8510sK4vm3jtsD1gi0tjSVuKVIlR07dwP/9QFKv",
	"Fp04aXAF9ksbmeRwnofDeeMNjVVeKAkSDZ3e0IJplgOCdl9vGWZzVUrUW/uZgIk1L5ArSad0Rs5GCU85",
	"kthPIbFKICLMmDKHhKAiKyCLyzfkyelvv41OCRNFxkZnNKLcrv9agt7SiEqWA53SSgiNqIkzyJnfcM1K",
	"gXRK31/SiObs20uQKWZ0ehbRnMvOV8EQQVu5n2aj/1zdnO1oRHFbWNEGNZcp3e0ij6gUWGoIIRIqZgIm",
	"gsm0ZOkQzMXyOakHHdxDYKotwmBAjvbxPO3hedrDw0bfLZ7RrcDeG9CzFCTarZxKGbAEdKuTnTHyUyKq",
	"4WvJNSR0irqEsJpMJlrxhMSC+0X7u+68HDD4TCUcnMk8g5TLlyrl8p0fsj/GSmKlGisKwWNmGZ/8aSzt",
	"N53NC60K0FjJgpxxETgmSdwIYUmiwRga0bXSOXPUuiUhglrEn6pZV800tfoTYvSI9k2iQkjWShODTCOX",
	"KcEMiLAgSaFVDMZE9Tw7yiRhJWYgsUJK4owJATIFuovoXOWFAIRHYqmRvUjsZ0NFWfJkyETUsnoXaRFV",
	"WMytkU9vhmMFM+Za6SQwuMd2V8Go2ayW3ZF0vwOJPY0HjoNJcw26HrztOBZqec6Q/fhBXILmLGSvxLgR",
	"Ist85W7k7XxVcu5vnrOPl2ShliRWUkLskCYMmRtjJOUbkHuqVI7jEhmW5i94YUsD7tZiaUhpqrvZ18Vv",
	"ZQoljQdxDhseV1frWBo4Qu5W/F3Dmk7p3yZtWJ34aWbiBVvOKxRMa7YNgxDcIFFrwoQgiVeIKOlt2RgV",
	"c4aQEBa7qDnumPG91L5N21peQL1lBiFb49Kfqv3bm1zSIHa+bt5cu8dSck/sAXvwh2tjuOXv86oJUZ9r",
	"Y4ksDmRcOhNp/QNZnNtlpQHCPfuf4673bgT8V7YoqwmPC3LRknskzLCiPaTOnLwNWaRMJpUbRfUFHKK3",
	"Wm244V7do9EEEoWD6l5zzAgjG9B2m8oxjckCDSlKXShLvSGljAUwHZFViYTjL4asQHDYNKlZafyfGYiC",
	"fAEoHLhcrbgAQlhRNDuUxQjVKGEIY39qS6VeMbmt3N/+xUf4hpMMc9GH2MndTqJ7ATYgkay2Tr/zrVHO",
	"J29AE7ZG0ASVIjmT2/rAzJjY+7ZSydYSwcQ125q9vBTyArfOC7yXNtQpzb9D8tOAXGcgSdnR5J4QTFkU",
	"SiMkryDhbOlU+klQrB+rD4LwtQ0fpYRvBcTW/ypNcm5cXPk89+qNrLqfiU++LVor+mj83iDbkPxoPqQj",
	"MshE59uFHRc5fzF17KxCj6cmFqpMXNyspNvN56xgKy44bi894TYdkGVuo/cs2TAZwxsTcyGc9udse0oj",
	"ehlnkJTCTo/ohdxwrWQOEplwoSeiF98QZALJ7Hca0XnGZAof+Zp3MoE2IZ37SATJXMk1T0vtneUgSVlz",
	"nV8zX//dRtnzet4uovlXxLvmv/p9uRwkLs1mlYxhChNVCUcgsWcIqfKld00lxDZ5Etr+l9l/BE8zV9Cp",
	"lbL/XwPTbCUgSFF8kKLbgB0gtpXHlZwHdBUQz2TiziuyH2+kcCWyko1EqzBfczcSUjhXCYhg+eGL2sCA",
	"T3Bf+/w2NAErfzIY2DDNWeVgbi9oarAHGQ1SU8OplN9TtVIsZCDPOxbbNxFWonpf2Fh2Ie2pd6uxlVIC",
	"mD+n+nJWy45KVwc3epi49mkZKhNRCdcffNydbRgXzjIjWoXiINiFWs41JLZaY8IMIc9dN+LIWndeGlT5",
	"rA5E+vUhq1nahOffsD08eMlTyeq+UXjKByZKOEKvPd4aRAf07Wg30KW38wE667Kgz+OFTArFvbk3+mbK",
	"YGWcA4jDg7mjfOjO3sfc7D6QGwIxrB5+pAVyS3vi4Obd9Ht4C30KfZRF+sw66JfsSJ3s1D70GTANOuAb",
	"9+9epUK9QVdcCJQLVgMgrv35TKsvoPeOeuiZvyK+UwqXquDxS9gccNMacoXgRe5juzbmbmAHVAoqENgu",
	"hL2fXgWPsh1u26Gz+XLx4YJGbVpT//D+9buLF4vL5cW7i/NgGOu3n14BZirpMnHxarZ4+cfbj+d/nD2f",
	"HX3YlZIHxAeaJTbixKW2Ht3eUo945S3sUNe49kV1XHP32w5UltnskiEWPrfkcq3qxJXF2GkM0RXIfwi+",
	"Smwe+a8NfB/7AWv9HIUVM1d5XkqOW3Ku4tIlg01DYdmkoLOiILO3i04omdKT8cn4bFRKgy7K7CKqCpCs",
	"4HRKn4xPxieu1YiZQz3ZnE6KurblMrXpPo9h0s2wZ77/PWm2uKEp4LC99QLQEKNyaEpMy4DP+ZsKI1Fg",
	"5C9IctfXH5Nnpf37i6/CuWm6VnZeNWnqJNQ1FReC8FQqDa4ppDCDTmmy1iqvGvWGXGc8zkjGNuB3TKC/",
	"h4YYJApXbjiWfNZinWen4N9ri52dnBzy+c28SbvaWVuZ58zmhLTo/T7ZnE2a4nDCFY7ivYivTIDnd4Cl",
	"lsZVIke1n3zH0zehBj3YPuwXgAu1tF6edh81tochd949Jnst5N1DqGv6bRH99eT07vm9St8uOn16zKJA",
	"bd11DHT6qXUJn652V91TTFuS/DE+meRM8nXVNA5ejvrQGKmnBtuatiyuGlFMJvaIubVuARsm0XWxQ0dW",
	"t2ofwne99mF834OyZqOKMltZa0i5QQ9m4nyguxCHbd89q5nhQwdZbXsvT73W5XjAWfs655xh+9b7KQy/",
	"nTJpHxh30Z2Tuw/Hx06vnkwtf/e+gMNXxwfdwf128g/dqoj+evbPuxfvdx/7jrPtVd9lP/Zn02Y1QSty",
	"kcraUN3WWTde0r2UrLbEeeqkag5z3X8sGYcuYSed+v/Z1EOMZPjS9SAj6bbSfr6BpL0DuMNGNqD5envY",
	"Pp5zyU0GB/2MVcnbhrr9WXXfTHpP3n8t1xN8zf8B71O/Hv2EPOBRDLL37OQLAp/C+qMeviRWCW6n9VBq",
	"URUUZjqxKTkr+Dguxq5sGN+gSHa0atethCcYRdKv1mKVd0o1/xVLerXb7a52/wsAAP//51zNyfYkAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
